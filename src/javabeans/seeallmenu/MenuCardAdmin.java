/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javabeans.seeallmenu;

import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;
import javabeans.model.MenuItem;
import javax.swing.ImageIcon;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 * Kelas MenuCardAdmin
 * Panel GUI yang menampilkan satu kartu menu di halaman admin.
 * Menyediakan informasi menu (ID, nama, kategori, harga, dan gambar),
 * serta tombol Edit dan Delete.
 *
 * Tombol Edit akan membuka FormEdit dan mengisi data menu terkait.
 * Tombol Delete akan menghapus data menu dari database dan menjalankan callback penyegaran.
 *
 * Digunakan dalam konteks tampilan daftar menu (see all menu) untuk admin.
 *
 * @author HAFIS HENDRIANSYAH
 */
public class MenuCardAdmin extends javax.swing.JPanel {
    private String nama;
    private String kategori;
    private int harga;
    private int id;
    private MenuItem item;
    private Runnable refreshCallback;

    /**
     * Konstruktor MenuCardAdmin
     * 
     * @param item objek MenuItem yang akan ditampilkan
     * @param refreshCallback callback untuk menyegarkan tampilan setelah edit/delete
     */
    public MenuCardAdmin(MenuItem item, Runnable refreshCallback) {
        this.item = item;
        this.refreshCallback = refreshCallback;
        initComponents();
        setData(item);
    }
    
    /**
     * Mengatur data tampilan label dan gambar menu berdasarkan item.
     * 
     * @param item objek MenuItem yang berisi data menu
     */
    public void setData(MenuItem item){
        this.id = (int) item.getId();
        this.nama = item.getNama();
        this.kategori = item.getKategori();
        this.harga = (int) item.getHarga();
        
        lblIDMenu.setText("ID Menu " + id);
        lblNamaMenu.setText(nama);
        lblKategori.setText(kategori);
        lblHarga.setText("Rp  " + harga);
        
        byte[] gambarBytes = item.getGambar(); // pastikan ada getter-nya
        if (gambarBytes != null) {
            ImageIcon icon = new ImageIcon(gambarBytes);
            Image img = icon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            jLabel1.setIcon(new ImageIcon(img));
            jLabel1.setText(""); // hilangkan teks
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblNamaMenu = new javax.swing.JLabel();
        lblKategori = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblIDMenu = new javax.swing.JLabel();

        setBackground(new java.awt.Color(78, 52, 46));

        jLabel1.setText("jLabel1");

        lblNamaMenu.setForeground(new java.awt.Color(255, 243, 224));
        lblNamaMenu.setText("jLabel2");

        lblKategori.setForeground(new java.awt.Color(255, 243, 224));
        lblKategori.setText("jLabel3");

        lblHarga.setForeground(new java.awt.Color(255, 243, 224));
        lblHarga.setText("jLabel4");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblIDMenu.setForeground(new java.awt.Color(255, 243, 224));
        lblIDMenu.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNamaMenu)
                            .addComponent(lblKategori)
                            .addComponent(lblHarga)
                            .addComponent(lblIDMenu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNamaMenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblKategori)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHarga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblIDMenu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Event handler untuk tombol Delete.
     * Menghapus data menu dari database dan menjalankan refreshCallback.
     * jika menu pada hari itu pernah dipesan maka menu tidak bisa di delete, harus menunggu hari besok ketika tidak ada transaksi sama sekali.
     * @param evt event klik tombol delete
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this?");
    if (confirm == JOptionPane.YES_OPTION){
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/javabeans", "root", "");

            // Cek apakah menu masih dipakai di order_detail
            String checkQuery = "SELECT COUNT(*) FROM order_detail WHERE id_menu = ?";
            PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
            checkStmt.setInt(1, item.getId());
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next() && rs.getInt(1) > 0) {
                // Jika masih dipakai, tampilkan peringatan
                JOptionPane.showMessageDialog(this, "Menu cannot be deleted because it is still used in an order.");
            } else {
                // Jika tidak dipakai, hapus
                String deleteQuery = "DELETE FROM javabeans_menu WHERE id = ?";
                PreparedStatement deleteStmt = conn.prepareStatement(deleteQuery);
                deleteStmt.setInt(1, item.getId());
                deleteStmt.executeUpdate();

                deleteStmt.close();
                JOptionPane.showMessageDialog(this, "Successfully delete menu.");
                refreshCallback.run();
            }

            checkStmt.close();
            rs.close();
            conn.close();

        } catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed delete menu.");
        }
    } 
    }//GEN-LAST:event_btnDeleteActionPerformed
    
    /**
     * Event handler untuk tombol Edit.
     * Membuka FormEdit dan mengisi data menu yang dipilih.
     * 
     * @param evt event klik tombol edit
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        FormEdit editForm = new FormEdit(refreshCallback);

        try {
            // Simpan gambar dari byte[] ke file sementara
            File tempFile = File.createTempFile("menu_image_" + item.getId(), ".jpg");
            FileOutputStream fos = new FileOutputStream(tempFile);
            fos.write(item.getGambar()); // item.getImage() = byte[]
            fos.close();
            String tempPath = tempFile.getAbsolutePath();

            // Kirim semua data ke FormEdit
            editForm.setData(
                item.getId(),
                item.getKategori(),
                item.getNama(),
                item.getHarga(),
                tempPath// path gambar yang baru dibuaIt
            );

            editForm.setVisible(true);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal membuka form edit: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblIDMenu;
    private javax.swing.JLabel lblKategori;
    private javax.swing.JLabel lblNamaMenu;
    // End of variables declaration//GEN-END:variables
}