/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javabeans.makeorder;

import java.awt.Dimension;
import java.awt.Image;
import javabeans.model.MenuItem;
import javax.swing.ImageIcon;
import javax.swing.SpinnerNumberModel;

/**
 * Kelas MenuCard
 * Komponen JPanel ini menampilkan satu menu item dalam bentuk kartu.
 * Menampilkan gambar, nama, kategori, harga, spinner jumlah, dan tombol tambah.
 * Berfungsi untuk memilih item menu dan memasukkannya ke keranjang.
 *
 * Digunakan di halaman MakeOrderFrame.
 *
 * @author alfar
 */
public class MenuCard extends javax.swing.JPanel {
    private String nama;
    private String kategori;
    private int harga;
    private MenuItem item;
        
    /**
     * Interface untuk listener penambahan item ke keranjang.
     */
    public interface CartListener {
        /**
         * Dipanggil saat tombol Add ditekan.
         * @param nama nama menu
         * @param harga harga satuan
         * @param jumlah jumlah yang ditambahkan
         */
        void onItemAdded(String nama, int harga, int jumlah);
    }
    
     private CartListener listener;
         
     /**
     * Menetapkan listener untuk event Add ke keranjang.
     * @param listener objek listener
     */
     public void setCartListener(CartListener listener) {
        this.listener = listener;
    }
     
     
    /**
     * Konstruktor MenuCard
     * @param item objek MenuItem yang merepresentasikan data menu
     */
    public MenuCard(MenuItem item) {
        initComponents();
       
        this.item = item;
        setData(item);
        
        SpinnerNumberModel model = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        jumlahSpinner.setModel(model);
        jumlahSpinner.setPreferredSize(new Dimension(60,25));
    }
        
    /**
     * Menetapkan data menu ke dalam tampilan komponen.
     * @param item objek MenuItem
     */
    public void setData(MenuItem item){
        this.nama = item.getNama();
        this.kategori = item.getKategori();
        this.harga = item.getHarga();
        
        namaLabel.setText(nama);
        kategoriLabel.setText(kategori);
        hargaLabel.setText("Rp  " + harga);
        
        byte[] gambarBytes = item.getGambar(); // pastikan ada getter-nya
        if (gambarBytes != null) {
            ImageIcon icon = new ImageIcon(gambarBytes);
            Image img = icon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            jLabel1.setIcon(new ImageIcon(img));
            jLabel1.setText(""); // hilangkan teks
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        namaLabel = new javax.swing.JLabel();
        kategoriLabel = new javax.swing.JLabel();
        hargaLabel = new javax.swing.JLabel();
        tambahButton = new javax.swing.JButton();
        jumlahSpinner = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(78, 52, 46));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");

        namaLabel.setForeground(new java.awt.Color(255, 243, 224));
        namaLabel.setText("jLabel2");

        kategoriLabel.setForeground(new java.awt.Color(255, 243, 224));
        kategoriLabel.setText("jLabel3");

        hargaLabel.setForeground(new java.awt.Color(255, 243, 224));
        hargaLabel.setText("jLabel4");

        tambahButton.setText("Add");
        tambahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kategoriLabel)
                    .addComponent(hargaLabel)
                    .addComponent(namaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tambahButton)
                    .addComponent(jumlahSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(namaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kategoriLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hargaLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jumlahSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tambahButton)))
                .addGap(0, 14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Event handler saat tombol "Add" ditekan.
     * Mengambil nilai dari spinner dan memanggil listener jika tersedia.
     * @param evt event klik tombol Add
     */
    private void tambahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahButtonActionPerformed
        // TODO add your handling code here:
        int jumlah = (Integer) jumlahSpinner.getValue();
        if (listener != null) {
                listener.onItemAdded(item.getNama(), (int) item.getHarga(), jumlah);
                jumlahSpinner.setValue(0);
            }
        
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_tambahButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hargaLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jumlahSpinner;
    private javax.swing.JLabel kategoriLabel;
    private javax.swing.JLabel namaLabel;
    private javax.swing.JButton tambahButton;
    // End of variables declaration//GEN-END:variables
}
